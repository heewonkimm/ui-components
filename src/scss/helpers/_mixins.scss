@use './vendors/sprites' as *;

// Hide
@mixin hide {
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	position: absolute;
	clip: rect(0,0,0,0);
	clip-path: polygon(0 0,0 0,0 0);
	border: 0;
	white-space: nowrap;
}

// Remove Hide
@mixin removehide {
	width: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static;
	clip: auto;
	clip-path: none;
	white-space: normal;
}

// Clearfix
@mixin clearfix {
	&::after {
		content: '';
		display: block;
		clear: both;
	}
}

// Ellipsis
@mixin ellipsis($lines: 1) {
	overflow: hidden;
	text-overflow: ellipsis;

	@if ($lines == 1) {
		white-space: nowrap;
	}
	@else {
		display: -webkit-box;
		-webkit-line-clamp: $lines;
		-webkit-box-orient: vertical;
	}
}

// image replace
@mixin imageReplace($elementLength, $imageLength, $imgUrl) {
	display: inline-flex;
	width: $elementLength;
	height: 0;
	max-height: 0;
	padding-top: $elementLength;
	overflow: hidden;
	background-image: url($imgUrl);
	background-repeat: no-repeat;
	background-position: center center;
	background-size: $imageLength auto;
}

// background image
@mixin backgroundImage($width, $height, $imgUrl) {
	display: inline-flex;
	width: $width;
	height: $height;
	background-image: url($imgUrl);
	background-repeat: no-repeat;
	background-position: center center;
	background-size: cover;
}

// sprite image replace
@mixin spriteIR($width, $height, $sprite, $position: relative) {
	display: inline-flex;
	width: $width;
	height: 0;
	max-height: 0;
	padding-top: $height;
	overflow: hidden;
	position: $position;

	&::after {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%,-50%);

		@include sprite($sprite);
	}
}

// center flex
@mixin centerFlex {
	display: flex;
	align-items: center;
	justify-content: center;
}

// size
@mixin size($width, $height) {
	width: $width;
	height: $height;
}